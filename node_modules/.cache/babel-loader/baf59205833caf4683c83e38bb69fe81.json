{"ast":null,"code":"import _regeneratorRuntime from\"/home/owusua/Music/tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/owusua/Music/tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/owusua/Music/tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/home/owusua/Music/tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{Line}from\"react-chartjs-2\";import numeral from\"numeral\";var options={legend:{display:false},elements:{point:{radius:0}},maintainAspectRation:false,tooltips:{mode:\"index\",intersect:false,callbacks:{label:function label(tooltipItem,data){return numeral(tooltipItem.value).format(\"+0,0\");}}},scales:{xAxes:[{type:\"time\",time:{format:\"MM/DD/YY\",tooltipFormat:\"ll\"}}],yAxes:[{gridLines:{display:false},ticks:{//Include a dollar sign in the ticks\ncallback:function callback(value,index,values){return numeral(value).format(\"0a\");}}}]}};var buildChartData=function buildChartData(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';var chartData=[];var lastDataPoint;for(var date in data.cases){if(lastDataPoint){var newDataPoint={x:date,y:data[casesType][date]-lastDataPoint};chartData.push(newDataPoint);}lastDataPoint=data[casesType][date];}return chartData;};function LineGraph(_ref){var _ref$casesType=_ref.casesType,casesType=_ref$casesType===void 0?\"cases\":_ref$casesType,props=_objectWithoutProperties(_ref,[\"casesType\"]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120').then(function(response){return response.json();}).then(function(data){//clever stuff happens\nconsole.log(data);var chartData=buildChartData(data,\"cases\");setData(chartData);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[casesType]);return/*#__PURE__*/React.createElement(\"div\",{className:props.className},(data===null||data===void 0?void 0:data.length)>0&&/*#__PURE__*/React.createElement(Line,{options:options,data:{datasets:[{backgroundColor:\"rgba(204, 16, 52, 0.5)\",borderColor:\"#CC1034\",data:data}]}}));}export default LineGraph;","map":{"version":3,"sources":["/home/owusua/Music/tracker/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRation","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","props","setData","fetchData","fetch","then","response","json","console","log","className","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport  { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRation: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\")\n            },\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    //Include a dollar sign in the ticks\n                    callback: function(value, index, values){\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\n\n\nconst buildChartData = (data, casesType='cases') => {\n    let chartData = [];\n    let lastDataPoint;\n\n    for(let date in data.cases) {\n        if(lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n}\n\nfunction LineGraph({ casesType = \"cases\", ...props }) {\n    const [data, setData] = useState({});\n\n\n\n    useEffect(() => {\n        const fetchData = async() => {\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\n            .then((response) => {\n                return response.json();\n            })\n            .then((data) => {\n                //clever stuff happens\n                console.log(data);\n                let chartData = buildChartData(data, \"cases\");\n                setData(chartData);\n            });\n        };\n       fetchData();\n    }, [casesType]);\n\n\n    return (\n        <div className={props.className}>\n            {/* // its called optional chaining, where it checks if data exist and if not, it just return the whole page as undefined without crushing*/}\n            {/* alternative to code below {data && data.length > 0 && ()} */}\n            {data?.length > 0 && (\n                <Line \n                options={options}\n                data={{\n                    datasets: [{\n                        backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                        borderColor: \"#CC1034\",\n                        data: data,\n                    }]\n                }} />\n            )}\n            \n            \n        </div>\n    )\n}\n\nexport default LineGraph;\n"]},"metadata":{},"sourceType":"module"}