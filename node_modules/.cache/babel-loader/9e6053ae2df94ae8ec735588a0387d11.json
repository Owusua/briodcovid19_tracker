{"ast":null,"code":"import _toConsumableArray from\"/home/owusua/Music/tracker/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import numeral from\"numeral\";import{Circle,Popup}from\"react-leaflet\";var casesTypeColors={cases:{hex:\"#CC1034\",multiplier:800},recovered:{hex:\"#7dd71d\",multiplier:1200},deaths:{hex:\"#fb4443\",multiplier:2000}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);/*sortedData.sort((a,b) => {\n        if(a.cases > b.cases) {\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n    return sortedData;*/ //alternative code\nreturn sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};//DRAW circles on the map with interactive tooltip\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};","map":{"version":3,"sources":["/home/owusua/Music/tracker/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACHC,GAAG,CAAE,SADF,CAEHC,UAAU,CAAE,GAFT,CADa,CAKpBC,SAAS,CAAE,CACPF,GAAG,CAAE,SADE,CAEPC,UAAU,CAAE,IAFL,CALS,CASpBE,MAAM,CAAE,CACJH,GAAG,CAAE,SADD,CAEJC,UAAU,CAAE,IAFR,CATY,CAAxB,CAgBA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAC9B,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CACA;;;;;;;wBAF8B,CAW9B;AACJ,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAGC,CAAH,QAAUD,CAAAA,CAAC,CAACT,KAAF,CAAUU,CAAC,CAACV,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAAnC,EAAhB,CAAP,CACC,CAbM,CAeP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC/BA,CAAAA,IAAI,YAAOhB,OAAO,CAACgB,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADb,EAAxB,CAGP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,IAAD,KAAOS,CAAAA,SAAP,2DAAiB,OAAjB,OACzBT,CAAAA,IAAI,CAACU,GAAL,CAAS,SAAAC,OAAO,qBACZ,oBAAC,MAAD,EACA,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADR,CAEA,WAAW,CAAE,GAFb,CAGA,KAAK,CAAErB,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAHlC,CAIA,SAAS,CAAEF,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAJtC,CAKA,MAAM,CACFoB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgChB,eAAe,CAACgB,SAAD,CAAf,CAA2Bb,UAN/D,eAUI,oBAAC,KAAD,mBACI,2BAAK,SAAS,CAAC,gBAAf,eACI,2BACA,SAAS,CAAC,WADV,CAEI,KAAK,CAAE,CAAEqB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFX,EADJ,cAKI,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CALJ,cAMI,2BAAK,SAAS,CAAC,gBAAf,YAAwCrB,OAAO,CAACqB,OAAO,CAACjB,KAAT,CAAP,CAAuBa,MAAvB,CAA8B,KAA9B,CAAxC,CANJ,cAOI,2BAAK,SAAS,CAAC,gBAAf,gBAA4CjB,OAAO,CAACqB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CAA5C,CAPJ,cAQI,2BAAK,SAAS,CAAC,aAAf,aAAsCjB,OAAO,CAACqB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CAAtC,CARJ,CADJ,CAVJ,CADY,EAAhB,CADyB,EAAtB","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#CC1034\",\n        multiplier: 800,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 1200,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        multiplier: 2000,\n    },\n};\n\n\nexport const sortData = (data) => {\n    const sortedData = [...data];\n    /*sortedData.sort((a,b) => {\n        if(a.cases > b.cases) {\n            return -1;\n        } else {\n            return 1;\n        }\n    });\n    return sortedData;*/ \n\n    //alternative code\nreturn sortedData.sort((a,b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const prettyPrintStat = (stat) => \nstat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n//DRAW circles on the map with interactive tooltip\nexport const showDataOnMap = (data, casesType='cases') => \n    data.map(country => (\n        <Circle \n        center={[country.countryInfo.lat, country.countryInfo.long]}\n        fillOpacity={0.4}\n        color={casesTypeColors[casesType].hex}\n        fillColor={casesTypeColors[casesType].hex}\n        radius={\n            Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier    \n        }\n        > \n\n            <Popup>\n                <div className=\"info-container\">  \n                    <div\n                    className=\"info-flag\"\n                        style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n                    />\n                    <div className=\"info-name\">{country.country}</div>\n                    <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\n                    <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\n                    <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\n                </div>\n            </Popup>\n            </Circle>\n    ));\n"]},"metadata":{},"sourceType":"module"}