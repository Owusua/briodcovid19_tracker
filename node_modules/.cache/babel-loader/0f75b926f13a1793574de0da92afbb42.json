{"ast":null,"code":"var _jsxFileName = \"/home/owusua/Music/tracker/covid-19-tracker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport './App.css';\n\nfunction App() {\n  //this section is for State management\n  const [countries, setCountries] = useState([]); //default select item\n\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableDate] = useState([]); // STATE = How to write a variable in REACT\n  //\n  //USEEFFECT = Runs a piece of code base on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    //async  -> send a request, wait for it, do something with the info\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()) //get response and take the json from it\n      .then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          //United States, United Kingdom\n          value: country.countryInfo.iso2 //UK, USA, FR\n\n        }));\n        setTableData(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []); //anytime [countries] is loaded the code in the useEffect is run\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    console.log('YOOOO >>>', countryCode);\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); //update input field\n\n      setCountryInfo(data); //stores response of country's info into a variable\n    });\n  };\n\n  console.log(\"COUNTRY INFO >>>\", countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"COVID-19 tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"Worldwide new Cases\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/owusua/Music/tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableDate","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","setTableData","onCountryChange","event","countryCode","target","console","log","url","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport './App.css';\n\nfunction App() {\n\n  //this section is for State management\n  const [countries, setCountries] = useState([]);\n  //default select item\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableDate] = useState([]);\n\n// STATE = How to write a variable in REACT\n//\n//USEEFFECT = Runs a piece of code base on a given condition\n\nuseEffect(() => {\n fetch(\"https://disease.sh/v3/covid-19/all\")\n .then(response => response.json())\n .then(data => {\n   setCountryInfo(data);\n })\n}, []);\n\nuseEffect(() => {\n  //async  -> send a request, wait for it, do something with the info\n\n  const getCountriesData = async () => {\n    await fetch (\"https://disease.sh/v3/covid-19/countries\")\n    .then((response) => response.json()) //get response and take the json from it\n    .then((data) => {\n      const countries = data.map((country) => ({\n          name: country.country, //United States, United Kingdom\n          value: country.countryInfo.iso2 //UK, USA, FR\n        }));\n      setTableData(data);\n      setCountries(countries);\n  \n    });\n  };\n\n  getCountriesData();\n}, []);  //anytime [countries] is loaded the code in the useEffect is run\n\nconst onCountryChange = async (event) => {\n  const countryCode = event.target.value;\n\n  console.log('YOOOO >>>', countryCode);\n  setCountry(countryCode);\n\n  const url = countryCode === 'worldwide' \n   ? 'https://disease.sh/v3/covid-19/all'\n   : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n   await fetch(url)\n   .then(response => response.json())\n   .then(data => {\n      setCountry(countryCode); //update input field\n      setCountryInfo(data); //stores response of country's info into a variable\n   })\n};\n\nconsole.log(\"COUNTRY INFO >>>\", countryInfo);\n\n  return (\n    <div className=\"app\">\n\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n              {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n\n\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n\n          <InfoBox title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n        <Map />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new Cases</h3>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}