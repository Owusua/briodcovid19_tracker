{"ast":null,"code":"var _jsxFileName = \"/home/owusua/Music/tracker/covid-19-tracker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport './App.css';\n\nfunction App() {\n  //this section is for State management\n  const [countries, setCountries] = useState([]); //default select item\n\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]); // STATE = How to write a variable in REACT\n  //\n  //USEEFFECT = Runs a piece of code base on a given condition\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    //async  -> send a request, wait for it, do something with the info\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()) //get response and take the json from it\n      .then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          //United States, United Kingdom\n          value: country.countryInfo.iso2 //UK, USA, FR\n\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []); //anytime [countries] is loaded the code in the useEffect is run\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode); //update input field\n\n      setCountryInfo(data); //stores response of country's info into a variable\n\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  console.log(\"COUNTRY INFO >>>\", countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"COVID-19 tracker\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: prettyPrintStat(countryInfo.todayCases),\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: prettyPrintStat(countryInfo.todayRecovered),\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: prettyPrintStat(countryInfo.todayDeaths),\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    countries: mapCountries,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Live Cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Worldwide new Cases\"), /*#__PURE__*/React.createElement(LineGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/owusua/Music/tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","console","log","prettyPrintStat","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent} from \"@material-ui/core\";\nimport InfoBox from './InfoBox';\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { sortData } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport './App.css';\n\nfunction App() {\n\n  //this section is for State management\n  const [countries, setCountries] = useState([]);\n  //default select item\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n\n// STATE = How to write a variable in REACT\n//\n//USEEFFECT = Runs a piece of code base on a given condition\n\nuseEffect(() => {\n fetch(\"https://disease.sh/v3/covid-19/all\")\n .then(response => response.json())\n .then(data => {\n   setCountryInfo(data);\n })\n}, []);\n\nuseEffect(() => {\n  //async  -> send a request, wait for it, do something with the info\n\n  const getCountriesData = async () => {\n    await fetch (\"https://disease.sh/v3/covid-19/countries\")\n    .then((response) => response.json()) //get response and take the json from it\n    .then((data) => {\n      const countries = data.map((country) => ({\n          name: country.country, //United States, United Kingdom\n          value: country.countryInfo.iso2 //UK, USA, FR\n        }));\n\n      const sortedData = sortData(data);\n      setTableData(sortedData);\n      setMapCountries(data);\n      setCountries(countries);\n  \n    });\n  };\n\n  getCountriesData();\n}, []);  //anytime [countries] is loaded the code in the useEffect is run\n\nconst onCountryChange = async (event) => {\n  const countryCode = event.target.value;\n\n  const url = countryCode === 'worldwide' \n   ? 'https://disease.sh/v3/covid-19/all'\n   : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n   await fetch(url)\n   .then(response => response.json())\n   .then(data => {\n      setCountry(countryCode); //update input field\n      setCountryInfo(data); //stores response of country's info into a variable\n      \n      \n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n      \n    });\n};\n\nconsole.log(\"COUNTRY INFO >>>\", countryInfo);\n\n  return (\n    <div className=\"app\">\n\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" onChange={onCountryChange} value={country}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n              {\n                countries.map((country) => (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n\n\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={prettyPrintStat(countryInfo.todayCases)} total={countryInfo.cases} />\n\n          <InfoBox title=\"Recovered\" cases={prettyPrintStat(countryInfo.todayRecovered)} total={countryInfo.recovered} />\n\n          <InfoBox title=\"Deaths\" cases={prettyPrintStat(countryInfo.todayDeaths)} total={countryInfo.deaths} />\n        </div>\n        <Map countries={mapCountries} center={mapCenter} zoom={mapZoom}/>\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new Cases</h3>\n          <LineGraph />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}